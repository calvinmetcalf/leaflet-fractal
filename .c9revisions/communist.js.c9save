{"ts":1365421591963,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*! communist 2013-03-19*/\n/*!©2013 Calvin Metcalf @license MIT https://github.com/calvinmetcalf/communist */\n(function(){\n\"use strict\";\n/*! Promiscuous ©2013 Ruben Verborgh @license MIT https://github.com/RubenVerborgh/promiscuous*/\n(function (exports) {\n  var func = \"function\",\n      noop = function () {};\n\n  function createDeferred() {\n    var handler,\n        changeState,\n        promise = {\n          then: function (onFulfilled, onRejected) {\n            return handler(onFulfilled, onRejected);\n          }\n        };\n\n    (function () {\n      var pending = [];\n      handler = function (onFulfilled, onRejected) {\n        var d = createDeferred();\n        pending.push({ d: d, resolve: onFulfilled, reject: onRejected });\n        return d.promise;\n      };\n      changeState = function (action, value, success) {\n        for (var i = 0, l = pending.length; i < l; i++) {\n          var p = pending[i], deferred = p.d, callback = p[action];\n          if (typeof callback !== func)\n            deferred[action](value);\n          else\n            execute(callback, value, deferred);\n        }\n        handler = createHandler(promise, value, success);\n        changeState = noop;\n      };\n    })();\n\n    return {\n      resolve: function (value)  { changeState('resolve', value, true); },\n      reject : function (reason) { changeState('reject', reason, false); },\n      promise: promise\n    };\n  }\n\n  function createHandler(promise, value, success) {\n    return function (onFulfilled, onRejected) {\n      var callback = success ? onFulfilled : onRejected, result;\n      if (typeof callback !== func)\n        return promise;\n      setTimeout(execute.bind(promise, callback, value, result = createDeferred()));\n      return result.promise;\n    };\n  }\n\n  function execute(callback, value, deferred) {\n    try {\n      var result = callback(value);\n      if (result && typeof result.then === func)\n        result.then(deferred.resolve, deferred.reject);\n      else\n        deferred.resolve(result);\n    }\n    catch (error) {\n      deferred.reject(error);\n    }\n  }\n\n  exports.resolve= function (value) {\n      var promise = {};\n      promise.then = createHandler(promise, value, true);\n      return promise;\n    };\n    exports.reject= function (reason) {\n      var promise = {};\n      promise.then = createHandler(promise, reason, false);\n      return promise;\n    }\n    exports.deferred=createDeferred;\n})(c);\n\nfunction makePromise(){\n\treturn c.deferred();\n}\n//this is mainly so the name shows up when you look at the object in the console\nvar Communist = function(){};\n//regex out the importScript call and move it up to the top out of the function.\nfunction moveImports(string){\n\tvar script;\n\tvar match = string.match(/(importScripts\\(.*\\);)/);\n\tif(match){\n\t\tscript = match[0].replace(/importScripts\\((.*)\\);?/,function(a,b){if(b){return \"importScripts(\"+b.split(\",\").map(function(cc){return '\"'+c.makeUrl(cc.slice(1,-1))+'\"'})+\");\\n\";}else{return \"\";}})+string.replace(/(importScripts\\(.*\\);?)/,\"\\n\");\n\t}else{\n\t\tscript = string;\n\t}\n\treturn script;\n};\n\n//accepts an array of strings, joins them, and turns them into a worker.\nfunction makeWorker(strings){\n\tvar worker;\n\tvar script =moveImports(strings.join(\"\"));\n\tc.URL = c.URL||window.URL || window.webkitURL || self.URL;\n\tif(window.communist.IEpath){\n\t\ttry{\n\t\t\tworker = new Worker(c.URL.createObjectURL(new Blob([script],{type: \"text/javascript\"})));\t\n\t\t} catch(e){\n\t\t\tworker = new Worker(window.communist.IEpath);\n\t\t\tworker.postMessage(script);\n\t\t}\n\t\treturn worker;\n\t}else {\n\t\treturn new Worker(c.URL.createObjectURL(new Blob([script],{type: \"text/javascript\"})));\t\n\t}\n};\n//special case of worker only being called once, instead of sending the data\n//we can bake the data into the worker when we make it.\nfunction oneOff(fun,data){\n\tvar promise = makePromise();\n\tvar worker = makeWorker(['var _self={};\\n_self.fun = ',fun,';\\n\\\n\t_self.cb=function(data,transfer){\\n\\\n\t\t\tself.postMessage(data,transfer);\\n\\\n\t\t\tself.close();\\n\\\n\t\t};\\n\\\n\t\t_self.result = _self.fun(',JSON.stringify(data),',_self.cb);\\n\\\n\t\tif(typeof _self.result !== \"undefined\"){\\n\\\n\t\t\t_self.cb(_self.result);\\n\\\n\t\t}']);\n\tworker.onmessage=function(e){\n\t\tpromise.resolve(e.data);\n\t};\n\tworker.onerror=function(e){\n\t\te.preventDefault();\n\t\tpromise.reject(e.message);\n\t};\n\treturn promise.promise;\n};\nfunction mapWorker(fun,callback,onerr){\n\tvar w = new Communist();\n\tvar worker = makeWorker(['var _close=function(){self.close();};var _db={};\\nvar _self={};\\n_self.fun = ',fun,';\\n\\\n\t\t_self.cb=function(data,transfer){\\n\\\n\t\t\tself.postMessage(data,transfer);\\n\\\n\t\t};\\n\\\n\t\tself.onmessage=function(e){\\n\\\n\t\t_self.result = _self.fun(e.data,_self.cb);\\n\\\n\t\t\tif(typeof _self.result !== \"undefined\"){\\n\\\n\t\t\t\t_self.cb(_self.result);\\n\\\n\t\t\t}\\n\\\n\t\t}']);\n\tworker.onmessage = function(e){\n\t\tcallback(e.data);\t\n\t};\n\tif(onerr){\n\t\tworker.onerror=onerr;\n\t}else{\n\t\tworker.onerror=function(){callback();};\n\t}\n\tw.data=function(d,t){\n\t\tworker.postMessage(d,t);\t\n\t\treturn w;\n\t};\n\tw.close=function(){\n\t\treturn worker.terminate();\n\t};\n\treturn w;\n};\nfunction sticksAround(fun){\n\tvar w = new Communist();\n\tvar promises = [];\n\tvar rejectPromises = function(msg){\n\t\tif(typeof msg!==\"string\" && msg.preventDefault){\n\t\t\tmsg.preventDefault();\n\t\t\tmsg=msg.message;\n\t\t}\n\t\tpromises.forEach(function(p){\n\t\t\tif(p){\n\t\t\t\tp.reject(msg);\n\t\t\t}\t\n\t\t});\n\t};\n\tvar func = 'function(data,cb){var _self={};_self.fun = '+fun+';\\n\\\n\t\t_self.numberCB = function(num,d,tran){\\n\\\n\t\t\tcb([num,d],tran);\\n\\\n\t\t};\\n\\\n\t\t_self.boundCB = _self.numberCB.bind(null,data[0]);\\n\\\n\t\t_self.result = _self.fun(data[1],_self.boundCB);\\n\\\n\t\tif(typeof _self.result !== \"undefined\"){\\n\\\n\t\t\t_self.boundCB(_self.result);\\n\\\n\t\t}\\n\\\n\t}';\n\tvar callback = function(data){\n\t\t\tpromises[data[0]].resolve(data[1]);\n\t\t\tpromises[data[0]]=0;\n\t};\n\tvar worker = mapWorker(func, callback,rejectPromises);\n\tw.close = function(){\n\t\tworker.close();\n\t\trejectPromises(\"closed\");\n\t\treturn;\n\t};\n\tw.data=function(data, transfer){\n\t\tvar i = promises.length;\n\t\tpromises[i] = makePromise();\n\t\tworker.data([i,data],transfer);\n\t\treturn promises[i].promise;\n\t};\n\treturn w;\n};\nfunction rWorker(fun,callback){\n\tvar w = new Communist();\n\tvar func = 'function(dat,cb){ var fun = '+fun+';\\n\\\n\t\tswitch(dat[0]){\\n\\\n\t\t\tcase \"data\":\\n\\\n\t\t\t\tif(!_db._r){\\n\\\n\t\t\t\t\t_db._r = dat[1];\\n\\\n\t\t\t\t}else{\\n\\\n\t\t\t\t\t_db._r = fun(_db._r,dat[1]);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tbreak;\\n\\\n\t\t\tcase \"get\":\\n\\\n\t\t\t\treturn cb(_db._r);\\n\\\n\t\t\tcase \"close\":\\n\\\n\t\t\t\tcb(_db._r);\\n\\\n\t\t\t\t_close();\\n\\\n\t\t\t\tbreak;\\n\\\n\t\t}\\n\\\n\t};'\n\tvar cb =function(data){\n\t\tcallback(data);\t\n\t};\n\tvar worker = mapWorker(func,cb);\n\tw.data=function(data,transfer){\n\t\tworker.data([\"data\",data],transfer);\n\t\treturn w;\n\t};\n\tw.fetch=function(){\n\t\tworker.data([\"get\"]);\n\t\treturn w;\n\t};\n\tw.close=function(silent){\n\t\tif(silent){\n\t\t\tcallback=function(){};\n\t\t}\n\t\tworker.data([\"close\"]);\n\t\treturn;\n\t};\n\treturn w;\n};\nfunction incrementalMapReduce(threads){\n\tvar w = new Communist();\n\tvar len = 0;\n\tvar promise;\n\tvar workers = [];\n\tvar data=[];\n\tvar idle = threads;\n\tvar reducer;\n\tvar waiting=false;\n\tvar closing=false;\n\tvar status = {\n\t\tmap:false,\n\t\treduce:false,\n\t\tdata:false\n\t};\n\tvar checkStatus = function(){\n\t\tif(status.map && status.reduce && status.data){\n\t\t\treturn go();\n\t\t}else{\n\t\t\treturn w;\n\t\t}\n\t};\n\tw.map=function(fun, t){\n\t\tif(status.map){\n\t\t\treturn w;\n\t\t}\n\t\tvar i = 0;\n\t\twhile(i<threads){\n\t\t\t(function(){\n\t\t\t\tvar dd;\n\t\t\t\tvar mw = mapWorker(fun, function(d){\n\t\t\t\t\tif(typeof d !== undefined){\n\t\t\t\t\t\treducer.data(d);\n\t\t\t\t\t}\n\t\t\t\t\tif(len>0){\n\t\t\t\t\t\tlen--;\n\t\t\t\t\t\tdd = data.pop();\n\t\t\t\t\t\tif(t){\n\t\t\t\t\t\t\tmw.data(dd,[dd]);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\tmw.data(dd);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{ \n\t\t\t\t\t\tidle++;\n\t\t\t\t\t\tif(idle===threads){\n\t\t\t\t\t\t\tstatus.data=false;\n\t\t\t\t\t\tif(closing){\n\t\t\t\t\t\t\tcloseUp();\n\t\t\t\t\t\t\t}else if(waiting){\n\t\t\t\t\t\t\t\twaiting = false;\n\t\t\t\t\t\t\t\treducer.fetch();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tworkers.push(mw);\n\t\t\t})();\n\t\t\ti++;\n\t\t}\n\t\tstatus.map=true;\n\t\treturn checkStatus();\n\t};\n\tw.reduce=function(fun){\n\t\tif(status.reduce){\n\t\t\treturn w;\n\t\t}\n\t\treducer = rWorker(fun,function(d){\n\t\t\tif(promise){\n\t\t\t\tpromise.resolve(d);\n\t\t\t\tpromise = false;\n\t\t\t}\n\t\t});\n\t\tstatus.reduce=true;\n\t\treturn checkStatus();\n\t};\n\tw.data = function(d){\n\t\tif(closing){\n\t\t\treturn;\n\t\t}\n\t\tlen = len + d.length;\n\t\tdata = data.concat(d);\n\t\tstatus.data=true;\n\t\treturn checkStatus();\n\t};\n\tfunction go(){\n\t\tvar i = 0;\n\t\tvar wlen = workers.length;\n\t\twhile(i<wlen && len>0 && idle>0){\n\t\t\tlen--;\n\t\t\tworkers[i].data(data.pop());\n\t\t\ti++;\n\t\t\tidle--;\n\t\t}\n\t\treturn w;\n\t}\n\tw.fetch=function(now){\n\t\tif(!promise){\n\t\t\tpromise = makePromise();\n\t\t}\n\t\tif(idle<threads && !now){\n\t\t\twaiting=true;\n\t\t}else{\n\t\t\treducer.fetch();\n\t\t}\n\t\treturn promise.promise;\n\t};\n\tw.close=function(){\n\t\tif(!promise){\n\t\t\tpromise = makePromise();\n\t\t}\n\t\tif(idle<threads){\n\t\t\tclosing=true;\n\t\t}else{\n\t\t\tcloseUp();\n\t\t}\n\t\treturn promise.promise;\n\t};\n\tfunction closeUp(){\n\t\treducer.close();\n\t\tworkers.forEach(function(v){\n\t\t\tv.close();\t\n\t\t});\n\t}\n\treturn w;\n};\nfunction nonIncrementalMapReduce(threads){\n\tvar w = new Communist();\n\tvar worker = incrementalMapReduce(threads);\n\tvar steps = {data:false,map:false,reduce:false};\n\tw.map = function(f,t){\n\t\tsteps.map=true;\n\t\tworker.map(f,t);\n\t\treturn check();\n\t};\n\tw.reduce = function(f){\n\t\tsteps.reduce=true;\n\t\tworker.reduce(f);\n\t\treturn check();\n\t};\n\tw.data = function(d){\n\t\tsteps.data=true;\n\t\tworker.data(d);\n\t\treturn check();\n\t};\n\t\n\tfunction check(){\n\t\tif(steps.data&&steps.map&&steps.reduce){\n\t\t\treturn worker.close();\n\t\t}else{\n\t\t\treturn w;\n\t\t}\n\t}\n\treturn w;\n};\nfunction c(a,b,c){\n\tif(typeof a !== \"number\" && typeof b === \"function\"){\n\t\treturn mapWorker(a,b,c);\n\t}else if(typeof a !== \"number\"){\n\t\treturn b ? oneOff(a,b):sticksAround(a);\n\t}else if(typeof a === \"number\"){\n\t\treturn !b ? incrementalMapReduce(a):nonIncrementalMapReduce(a);\n\t}\n};\nc.reducer = rWorker;\nc.worker = makeWorker;\nc.makeUrl = function (fileName) {\n\tvar link = document.createElement(\"link\");\n\tlink.href = fileName;\n\treturn link.href;\n};\nc.ajax = function(url,after,notjson){\n\tvar txt=!notjson?'JSON.parse(request.responseText)':\"request.responseText\";\n\tvar resp = after?\"(\"+after.toString()+\")(\"+txt+\",_cb)\":txt;\n\tvar func = 'function (url, _cb) {\\n\\\n\t\tvar request = new XMLHttpRequest();\\n\\\n\t\trequest.open(\"GET\", url);\\n\\\n\t\t\trequest.onreadystatechange = function() {\\n\\\n\t\t\t\tvar _resp;\\n\\\n\t\t\t\tif (request.readyState === 4 && request.status === 200) {\\n'+\n\t\t\t\t\t'_resp = '+resp+';\\n\\\n\t\t\t\t\tif(typeof _resp!==\"undefined\"){_cb(_resp);}\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t};\\n\\\n\t\trequest.send();\\n\\\n\t}';\n\treturn c(func,c.makeUrl(url));\n};\nwindow[\"communist\"]=c;\n})();\n"]],"start1":0,"start2":0,"length1":0,"length2":10501}]],"length":10501}
{"contributors":[],"silentsave":false,"ts":1365421701863,"patch":[[{"diffs":[[0,"unction("],[1,"wc"],[0,"){\n\"use "]],"start1":112,"start2":112,"length1":16,"length2":18},{"diffs":[[0,"ed();\n}\n"],[1,"if(wc){\n    c.IEpath=wc.IEpath;\n}\n"],[0,"//this i"]],"start1":2455,"start2":2455,"length1":16,"length2":50},{"diffs":[[0,"]=c;\n})("],[1,"window.communist"],[0,");\n"]],"start1":10526,"start2":10526,"length1":11,"length2":27}]],"length":10553,"saved":false}
{"ts":1365421760731,"patch":[[{"diffs":[[0,"unction("],[-1,"wc"],[0,"){\n\"use "]],"start1":112,"start2":112,"length1":18,"length2":16},{"diffs":[[0,";\n}\n"],[-1,"if(wc){\n    c.IEpath=wc.IEpath;\n}\n"],[0,"//th"]],"start1":2457,"start2":2457,"length1":42,"length2":8},{"diffs":[[0,"]=c;\n})("],[-1,"window.communist"],[0,");\n"]],"start1":10490,"start2":10490,"length1":27,"length2":11}]],"length":10501,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365421959430,"patch":[[{"diffs":[[0,"\n\t\ttry{\n"],[1,"            console.log(\"try\");\n"],[0,"\t\t\tworke"]],"start1":3306,"start2":3306,"length1":16,"length2":48}]],"length":10533,"saved":false}
